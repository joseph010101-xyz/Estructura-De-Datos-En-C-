//---------------------------------------------------------------------------

#pragma hdrstop

#include <string>
#include "UFecha.h"
#include <System.SysUtils.hpp>
//---------------------------------------------------------------------------
 CFecha::CFecha(){
	Dia=1;
	Mes=1;
	Año=1900;
}
CFecha::CFecha(int Dia,int Mes,int Año){
	this->Dia=Dia;
	this->Mes=Mes;
	this->Año=Año;
}
void CFecha::SetDia(int dia){
	if (dia>0 && dia<=31) {
		Dia=dia;
	}else{
		ShowMessage("No Esta Dentro Del Rango De los Dias Del Mes");
	}
}
void CFecha::SetMes(int mes){
	if (mes>0 && mes<=12){
		Mes=mes;
	}else{
		ShowMessage("No Esta Dentro Del Rango De los Meses Del Año");
	}
}
void CFecha::SetAño(int año){
	if (año>=1900 && año<=2050 ) {
		Año=año;
	}else{
		ShowMessage("No esta dentro del rango ");
	}
}
int CFecha::GetDia(){
	return Dia;
}
int CFecha::GetMes(){
	return Mes;
}
int CFecha::GetAño(){
    return Año;
}
String CFecha::EsBisiesto(){
	bool esbisiesto=((GetAño() % 4 ==0 && GetAño() % 100 !=0) || (GetAño() % 400==0));
	String resultado;
	(esbisiesto)?resultado="Es Bisiesto":resultado="No Es Bisiesto";
	return resultado;
}
int CFecha::DiasMes(int mes){
	const int DiasPorMes[]={31,28,31,30,31,30,31,31,30,31,30,31};
	bool esbisiesto=((GetAño() % 4 ==0 && GetAño() % 100 !=0) || (GetAño() % 400==0));
	if (mes>12 && mes<1) {
		ShowMessage("El Mes Ingresado No Existe");
	}
	if (mes==2) {
		return esbisiesto ? 29 : 28;
	}else{
		return DiasPorMes[mes -1];
	}
}
String CFecha::Corto(){
	String resultado;
	resultado=IntToStr(GetAño())+"-"+IntToStr(GetMes())+"-"+IntToStr(GetDia());
	return resultado;
}
String CFecha::DiasTranscurridos(CFecha fecha,CFecha fechaDos){
	int añoMayor, añoMenor, año, mes, dia;
	int mesResta, diaResta;
	if (fecha.GetAño() > fechaDos.GetAño()) {
		añoMayor = fecha.GetAño();
		añoMenor = fechaDos.GetAño();
	} else {
		añoMayor = fechaDos.GetAño();
		añoMenor = fecha.GetAño();
	}
	año = añoMayor - añoMenor;
	mesResta = abs(fecha.GetMes()-fechaDos.GetMes());
	diaResta = abs(fecha.GetDia()- fechaDos.GetDia());
	mes = año * 12 + mesResta;
	if (fecha.GetDia()< fechaDos.GetDia()){
		mes--;
		dia = 30 - diaResta;
	} else {
		dia = diaResta;
	}
	int diasTotales = año * 365 + mes * 30 + dia;
	String mensaje = IntToStr(año) + " años, " + IntToStr(mes) + " meses, " + IntToStr(dia) + " días";
	return mensaje;
}
bool CFecha::AñoBisiesto(int año){
	String resultado;
	if (año>=1900 && año<=2050) {
		bool esbisiesto=((año % 4 ==0 && año % 100 !=0) || (año % 400==0));

		   (esbisiesto)?resultado="Es Bisiesto":resultado="No Es Bisiesto";

	}else{
		ShowMessage("El Año Ingresado Esta Fuera Del Rango");
	}
	//return resultado;
}
int CFecha::DiaSemana(){
	int a=GetAño();
	int m=GetMes();
	int d=GetDia();
	if (m==1||m==2) {
		m+=12;
		a--;
	}
	int k=a%100;
	int j=a/100;
	int h=(d+(13*(m+1))/5+k+(k/4)+(j/4)+5*j)%7;
	int diaSemana=(h+5)%7;
	return diaSemana;
}
String CFecha::Largo(){
	String diasSemana[7]={"domingo","lunes","martes","miercoles","jueves","viernes","sabado"};
	String meses[12]={"enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"};
	int diaSema=DiaSemana();
	String fechaLarga=diasSemana[diaSema]+" "+IntToStr(GetDia())+" de "+meses[GetMes()-1]+" de "+IntToStr(GetAño());
	return fechaLarga;
}
String CFecha::EstacionDelAño(){
	if ((GetMes()==3 && GetDia()>=21)||(GetMes()==4)||(GetMes()==5)||(GetMes()==6 && GetDia()<=20)) {
		return "primavera";
	}else if ((GetMes()==6 && GetDia()>=21)||(GetMes()==7)||(GetMes()==8)||(GetMes()==9 && GetDia()<=22)) {
			return "verano";
		  }else if ((GetMes()==9 && GetDia()>=23)||(GetMes()==10)||(GetMes()==11)||(GetMes()==12 && GetDia()<=20)) {
					return "otoño";
				}else{
					return "invierno";
				}
}
int CFecha::convertirADias(){
	int totalDias=0;
	int yearBase=1900;
	for (int i=yearBase; i < GetAño(); i++) {
		totalDias+=(AñoBisiesto(i))?366:365;
	}
	int diasMeses[]={31,(AñoBisiesto(GetAño())?29:28),31,30,31,30,31,31,30,31,30,31};
	for (int i = 1; i < GetMes(); i++) {
		totalDias+=diasMeses[i - 1];
	}
	totalDias+=GetDia();
	return totalDias;
}
int DiasEntre(CFecha otraFecha){
	int diasFecha1=otraFecha.convertirADias();
	int diasFecha2=otraFecha.convertirADias();
	return abs(diasFecha1-diasFecha2);
}
/*void siguiente(){
	int a=GetAño();
	int m=GetMes();
	int d=GetDia();
	d++;
	if (d > DiasMes(m)) {
		d=1;
		m++;
		if (m>12) {
			m=1;
			a++;
		}
	}
}
void anterior(){
} */
CFecha CFecha::Copia(){
	CFecha nuevaFecha(this->Dia,this->Mes,this->Año);
	return nuevaFecha;
}




